function u(l){return{showModal:!1,isDragOver:!1,dragActive:!1,dragCounter:0,uploading:!1,uploadingFiles:[],completedFiles:[],uploadedFiles:[],error:null,success:null,importUrl:"",urlToImport:"",showUrlImport:!1,importingFromUrl:!1,state:l.state||[],abortControllers:new Map,updatingState:!1,config:{acceptedFileTypes:l.acceptedFileTypes||[],chunkSize:l.chunkSize||5242880,maxParallelUploads:l.maxParallelUploads||3,maxFileSize:l.maxFileSize||52428800,minFileSize:l.minFileSize||0,maxFiles:l.maxFiles||null,isMultiple:l.multiple!==!1,isDisabled:l.isDisabled||!1,isPreviewable:l.isPreviewable||!1,isImageUpload:l.isImageUpload||!1,isVideoUpload:l.isVideoUpload||!1,modalMode:l.modalMode||!1,allowUrlImport:l.allowUrlImport||!1,isChunked:!0,urls:{upload:l.routes?.store,delete:l.routes?.delete,cancel:l.routes?.cancel,importUrl:l.importUrlEndpoint||null},storage:{disk:l.storage?.disk||"public",finalDir:l.storage?.finalDir||"uploads",tempDir:l.storage?.tempDir||"uploads/temp"},messages:{uploading:l.uploadingMessage||"Uploading files...",dragOver:"Drop files here to upload",clickToUpload:"Click to upload or drag and drop",maxFilesReached:"Maximum number of files reached",invalidFileType:"Invalid file type",fileTooLarge:"File too large",fileTooSmall:"File too small",uploadFailed:"Upload failed",uploadCancelled:"Upload cancelled",urlImportFailed:"Failed to import from URL"}},init(){this.loadExistingFiles(),this.$watch("state",()=>this.loadExistingFiles()),this.setupEventListeners(),this.setupDragAndDrop(),this.autoFocusModal()},openModal(){this.config.modalMode&&(this.showModal=!0,this.error=null,this.success=null,document.body.classList.add("overflow-hidden"),this.$nextTick(()=>{let e=this.$refs.modal,t=this.$refs.fileInput||this.$refs.urlInput;e&&(e.focus(),this.trapFocus(e)),t&&this.config.autoFocus&&t.focus()}),this.$dispatch("modal-opened",{component:"chunked-file-upload"}))},closeModal(e=!1){if(this.config.modalMode){if(this.uploading&&!e){if(!confirm("Files are still uploading. Are you sure you want to close?"))return;this.cancelAllUploads()}this.showModal=!1,this.dragActive=!1,this.dragCounter=0,this.importUrl="",this.importingFromUrl=!1,document.body.classList.remove("overflow-hidden"),(!this.uploading||e)&&this.clearMessages(),this.$dispatch("modal-closed",{component:"chunked-file-upload"})}},setupDragAndDrop(){let e=this.config.modalMode?this.$refs.modalDropZone||this.$el:this.$el.querySelector(".fi-fo-file-upload-dropzone")||this.$el;e&&(["dragenter","dragover","dragleave","drop"].forEach(t=>{document.addEventListener(t,this.preventDefaults,!1),e.addEventListener(t,this.preventDefaults,!1)}),e.addEventListener("dragenter",this.handleDragEnter.bind(this),!1),e.addEventListener("dragover",this.handleDragEnter.bind(this),!1),e.addEventListener("dragleave",this.handleDragLeave.bind(this),!1),e.addEventListener("drop",this.handleDrop.bind(this),!1))},handleDragEnter(e){this.config.isDisabled||!this.hasValidFiles(e.dataTransfer)||(e.preventDefault(),this.dragCounter++,this.dragActive=!0,this.isDragOver=!0)},handleDragOver(e){this.config.isDisabled||(e.preventDefault(),this.isDragOver=!0)},handleDragLeave(e){this.config.isDisabled||(e.preventDefault(),this.dragCounter--,this.dragCounter<=0&&(this.dragActive=!1,this.isDragOver=!1,this.dragCounter=0))},handleDrop(e){if(this.config.isDisabled)return;e.preventDefault(),this.dragActive=!1,this.isDragOver=!1,this.dragCounter=0;let t=Array.from(e.dataTransfer.files);t.length>0&&this.handleFiles(t)},handleFileSelect(e){if(this.config.isDisabled)return;let t=Array.from(e.target.files);this.handleFiles(t),e.target.value=""},handleFiles(e){if(!e.length)return;this.clearMessages();let t=this.validateFiles(e);if(!t.valid){this.showError(t.error);return}this.startUploads(e)},validateFiles(e){if(this.config.isDisabled)return{valid:!1,error:"File uploads are disabled"};let t=this.completedFiles.length+this.uploadingFiles.filter(i=>i.status!=="error").length+e.length;if(this.config.maxFiles&&t>this.config.maxFiles)return{valid:!1,error:`Maximum ${this.config.maxFiles} files allowed. Current: ${this.completedFiles.length}, Adding: ${e.length}`};for(let i of e){if(this.config.maxFileSize&&i.size>this.config.maxFileSize)return{valid:!1,error:`"${i.name}" (${this.formatFileSize(i.size)}) exceeds maximum size of ${this.formatFileSize(this.config.maxFileSize)}`};if(this.config.minFileSize&&i.size<this.config.minFileSize)return{valid:!1,error:`"${i.name}" (${this.formatFileSize(i.size)}) is below minimum size of ${this.formatFileSize(this.config.minFileSize)}`};if(this.config.acceptedFileTypes.length>0&&!this.isValidFileType(i))return{valid:!1,error:`"${i.name}" is not an accepted file type. Accepted: ${this.config.acceptedFileTypes.join(", ")}`}}return{valid:!0}},async startUploads(e){this.uploading=!0,this.clearMessages();let t=e.map(i=>this.createUploadEntry(i));this.uploadingFiles=[...this.uploadingFiles,...t],await this.processUploadsWithConcurrency(t),this.finishUploads()},createUploadEntry(e){let t={id:this.generateFileKey(),name:e.name,size:e.size,type:e.type,progress:0,status:"pending",speed:null,eta:null,uploadedBytes:0,chunks:[],uploadedChunks:0,totalChunks:this.shouldUseChunking(e)?Math.ceil(e.size/this.config.chunkSize):1,startTime:null,lastProgressTime:null,error:null,url:null,retryCount:0,maxRetries:3};return this._fileObjects||(this._fileObjects=new Map),this._fileObjects.set(t.id,e),t},async processUploadsWithConcurrency(e){let t=new Array(this.config.maxParallelUploads).fill(null),i=e.map(async s=>{await this.waitForSlot(t,s.id);try{await this.uploadFile(s),this.handleUploadSuccess(s)}catch(a){this.handleUploadError(s,a)}finally{this.releaseSlot(t,s.id)}});await Promise.allSettled(i)},async uploadFile(e){let t=this._fileObjects.get(e.id);if(!t)throw new Error("File object not found");this.updateUploadStatus(e.id,"uploading",{startTime:Date.now()}),this.shouldUseChunking(t)?await this.uploadFileInChunks(e):await this.uploadFileDirectly(e)},async uploadFileInChunks(e){let t=this._fileObjects.get(e.id);if(!t)throw new Error("File object not found");let i=Math.ceil(t.size/this.config.chunkSize);this.updateUploadStatus(e.id,null,{totalChunks:i,chunks:new Array(i).fill(!1)});for(let s=0;s<i;s++){if(this.abortControllers.has(e.id)&&this.abortControllers.get(e.id).signal.aborted)throw new Error("Upload cancelled");let a=s*this.config.chunkSize,o=Math.min(a+this.config.chunkSize,t.size),r=t.slice(a,o);await this.uploadChunk(e,r,s,i,t.name),this.updateChunkProgress(e.id,s)}},async uploadFileDirectly(e){let t=this._fileObjects.get(e.id);if(!t)throw new Error("File object not found");let i=this.buildFormData(t,e.id,{direct:!0,originalName:t.name}),a=await(await this.makeUploadRequest(i,e.id)).json();if(!a.success)throw new Error(a.message||"Upload failed");this.updateUploadStatus(e.id,null,{url:a.url,progress:100,uploadedBytes:t.size})},async uploadChunk(e,t,i,s,a){let o=this.buildFormData(t,e.id,{chunk:i,chunks:s,originalName:a}),r=new AbortController,d=`${e.id}_${i}`;this.abortControllers.set(d,r);try{let n=await(await this.makeUploadRequest(o,d,r.signal)).json();if(!n.success)throw new Error(n.message||"Chunk upload failed");n.completed&&this.updateUploadStatus(e.id,null,{url:n.url})}finally{this.abortControllers.delete(d)}},toggleUrlImport(){this.showUrlImport=!this.showUrlImport,this.showUrlImport&&this.$nextTick(()=>{let e=this.$refs.urlInput;e&&e.focus()})},async importFromUrl(){let e=this.urlToImport||this.importUrl;if(!e.trim()||!this.config.urls.importUrl){this.showError("Please enter a valid URL");return}this.importingFromUrl=!0,this.clearMessages();try{let t=await fetch(this.config.urls.importUrl,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.getCsrfToken()},body:JSON.stringify({url:e.trim(),statePath:this.config.statePath||""})});if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);let i=await t.json();if(!i.success)throw new Error(i.message||"Failed to import from URL");this.completedFiles.push({key:this.generateFileKey(),name:i.filename||this.extractFilenameFromUrl(this.importUrl),size:i.fileSize||0,type:i.mimeType||this.guessTypeFromUrl(this.importUrl),url:i.url,imported:!0}),this.importUrl="",this.urlToImport="",this.updateLivewireState(),this.showSuccess("File imported successfully from URL"),this.config.modalMode&&setTimeout(()=>this.closeModal(),1500)}catch(t){console.error("URL import error:",t),this.showError(`Failed to import from URL: ${t.message}`)}finally{this.importingFromUrl=!1}},async cancelUpload(e){let t=this.uploadingFiles.find(i=>i.id===e);if(t){this.cancelUploadRequests(e),this.updateUploadStatus(e,"cancelled");try{await this.makeServerCleanupRequest(e)}catch(i){console.warn("Server cleanup failed:",i)}this._fileObjects&&this._fileObjects.delete(e),this.uploadingFiles=this.uploadingFiles.filter(i=>i.id!==e),this.updateUploadingState(),this.$dispatch("file-cancelled",{fileId:e,fileName:t.name})}},async cancelAllUploads(){let e=[...this.uploadingFiles];for(let t of e)(t.status==="uploading"||t.status==="pending")&&await this.cancelUpload(t.id);this.clearMessages(),this.showSuccess("All uploads cancelled")},async removeFile(e){let t=this.completedFiles.find(i=>i.key===e);if(t&&confirm(`Are you sure you want to delete "${t.name}"?`))try{let i=this.extractFilePathFromUrl(t.url);!i&&t.name&&(i=`uploads/${t.name}`),i||(i=`uploads/${e}`),console.log("Delete request:",{fileKey:e,filePath:i,fileUrl:t.url});let s=await fetch(this.config.urls.delete,{method:"DELETE",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.getCsrfToken(),Accept:"application/json"},body:JSON.stringify({fileKey:e,path:i})});if(!s.ok){let o=await s.text();throw new Error(`HTTP ${s.status}: ${o}`)}let a=await s.json();if(!a.success)throw new Error(a.message||"Failed to delete file");this.completedFiles=this.completedFiles.filter(o=>o.key!==e),this.updateLivewireState(),this.showSuccess(`"${t.name}" deleted successfully`)}catch(i){console.error("File deletion error:",i),this.showError(`Failed to delete "${t.name}": ${i.message}`)}},async retryUpload(e){let t=this.uploadingFiles.findIndex(s=>s.id===e);if(t===-1)return;let i=this.uploadingFiles[t];if(i.retryCount>=i.maxRetries){this.showError(`Maximum retry attempts reached for "${i.name}"`);return}if(!this._fileObjects||!this._fileObjects.has(e)){this.showError(`File data no longer available for "${i.name}"`);return}this.resetUploadEntry(t),i.retryCount++;try{await this.uploadFile(i),this.handleUploadSuccess(i)}catch(s){this.handleUploadError(i,s)}},shouldUseChunking(e){return this.config.isChunked&&e.size>this.config.chunkSize},isValidFileType(e){return this.config.acceptedFileTypes.length===0?!0:this.config.acceptedFileTypes.some(t=>t.includes("/")?t.endsWith("/*")?e.type.startsWith(t.slice(0,-1)):e.type===t:e.name.toLowerCase().endsWith(t.toLowerCase()))},hasValidFiles(e){return!e||!e.types?!1:e.types.includes("Files")},getFileIcon(e){let t=e.type||"";return t.startsWith("image/")?{bg:"bg-blue-100",text:"text-blue-600",label:"IMG"}:t.startsWith("video/")?{bg:"bg-purple-100",text:"text-purple-600",label:"VID"}:t.includes("pdf")?{bg:"bg-red-100",text:"text-red-600",label:"PDF"}:{bg:"bg-zinc-100",text:"text-zinc-600",label:"DOC"}},formatFileSize(e){if(e===0)return"0 Bytes";let t=1024,i=["Bytes","KB","MB","GB","TB"],s=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,s)).toFixed(2))+" "+i[s]},calculateETA(e){if(!e.startTime||!e.uploadedBytes||e.uploadedBytes===0)return null;let t=(Date.now()-e.startTime)/1e3,i=e.uploadedBytes/t,s=e.size-e.uploadedBytes;return i>0?Math.ceil(s/i):null},formatETA(e){return!e||e<=0?"":e<60?`${e}s`:e<3600?`${Math.ceil(e/60)}m`:`${Math.ceil(e/3600)}h`},updateUploadStatus(e,t,i={}){let s=this.uploadingFiles.findIndex(o=>o.id===e);if(s===-1)return;let a=this.uploadingFiles[s];t&&(a.status=t),Object.assign(a,i),(i.uploadedBytes!==void 0||i.uploadedChunks!==void 0)&&this.updateProgressCalculations(a)},updateProgressCalculations(e){e.totalChunks>1&&(e.progress=Math.round(e.uploadedChunks/e.totalChunks*100),e.uploadedBytes=e.uploadedChunks*this.config.chunkSize),this.updateSpeedCalculation(e)},updateSpeedCalculation(e){if(!e.startTime)return;let t=Date.now(),i=(t-e.startTime)/1e3;if(i>.5){let s=e.uploadedBytes/i;e.speed=this.formatFileSize(s),e.eta=this.calculateETA(e),e.lastProgressTime=t}},updateChunkProgress(e,t){let i=this.uploadingFiles.findIndex(a=>a.id===e);if(i===-1)return;let s=this.uploadingFiles[i];s.chunks[t]=!0,s.uploadedChunks=s.chunks.filter(Boolean).length,this.updateProgressCalculations(s)},handleUploadSuccess(e){if(this.uploadingFiles.findIndex(a=>a.id===e.id)===-1)return;let i=this._fileObjects.get(e.id),s=i?i.size:e.size;this.updateUploadStatus(e.id,"completed",{progress:100,uploadedBytes:s}),this.completedFiles.push({key:e.id,name:e.name,size:e.size,type:e.type,url:e.url,uploaded_at:new Date().toISOString()}),this._fileObjects&&this._fileObjects.delete(e.id),this.announceProgress(e.name,100,"completed"),this.$dispatch("file-uploaded",{fileId:e.id,fileName:e.name,fileUrl:e.url,fileSize:e.size,fileType:e.type})},handleUploadError(e,t){t.name==="AbortError"||t.message.includes("cancelled")?this.updateUploadStatus(e.id,"cancelled"):(this.updateUploadStatus(e.id,"error",{error:t.message||"Upload failed"}),this.announceProgress(e.name,0,"error"),this.$dispatch("file-error",{fileId:e.id,fileName:e.name,error:t.message}))},finishUploads(){this.uploadingFiles=this.uploadingFiles.filter(t=>t.status!=="completed"),this.updateUploadingState(),this.updateLivewireState(),!this.uploadingFiles.some(t=>t.status==="error")&&this.completedFiles.length>0&&(this.showSuccess("All files uploaded successfully"),this.config.modalMode&&this.showModal&&setTimeout(()=>{this.closeModal()},2e3))},updateUploadingState(){this.uploading=this.uploadingFiles.some(e=>e.status==="uploading"||e.status==="pending")},loadExistingFiles(){if(!this.state||this.updatingState)return;let e=Array.isArray(this.state)?this.state:[this.state];(this.completedFiles.length===0||e.length!==this.completedFiles.length)&&(this.completedFiles=e.map(t=>({key:this.generateFileKey(),name:t,size:0,type:this.guessTypeFromFilename(t),url:this.buildFileUrl(t)})),this.uploadedFiles=[...this.completedFiles])},updateLivewireState(){if(this.updatingState)return;this.updatingState=!0;let e=this.completedFiles.map(t=>({key:t.key,name:t.name,size:t.size||0,type:t.type||"application/octet-stream",url:t.url||"",uploaded_at:t.uploaded_at||new Date().toISOString(),imported:t.imported||!1}));this.state=e,this.uploadedFiles=[...e],setTimeout(()=>{this.updatingState=!1},100)},buildFormData(e,t,i={}){let s=new FormData;return s.append("file",e),s.append("fileKey",t),i.originalName?s.append("name",i.originalName):s.append("name",t),i.chunk!==void 0&&(s.append("chunk",i.chunk),s.append("chunks",i.chunks)),s},async makeUploadRequest(e,t,i=null){let s=i?null:new AbortController;!i&&s&&(this.abortControllers.set(t,s),i=s.signal);try{let a=await fetch(this.config.urls.upload,{method:"POST",body:e,signal:i,headers:{"X-CSRF-TOKEN":this.getCsrfToken(),Accept:"application/json"}});if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);return a}finally{s&&this.abortControllers.delete(t)}},async makeServerCleanupRequest(e){await fetch(this.config.urls.cancel,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.getCsrfToken()},body:JSON.stringify({fileKey:e})})},cancelUploadRequests(e){Array.from(this.abortControllers.entries()).filter(([t])=>t.startsWith(e)).forEach(([t,i])=>{try{i.abort(),this.abortControllers.delete(t)}catch(s){console.debug("Expected abort error:",s)}})},async waitForSlot(e,t){return new Promise(i=>{let s=()=>{let a=e.findIndex(o=>o===null);a!==-1?(e[a]=t,i()):setTimeout(s,100)};s()})},releaseSlot(e,t){let i=e.findIndex(s=>s===t);i!==-1&&(e[i]=null)},resetUploadEntry(e){let t=this.uploadingFiles[e];t.status="pending",t.progress=0,t.error=null,t.uploadedBytes=0,t.uploadedChunks=0,t.chunks=[],t.speed=null,t.eta=null,t.startTime=null,t.lastProgressTime=null},setupEventListeners(){window.addEventListener("beforeunload",()=>this.cleanup()),this.config.modalMode&&document.addEventListener("keydown",e=>{e.key==="Escape"&&this.showModal&&this.closeModal()})},autoFocusModal(){this.config.modalMode&&this.config.autoFocus&&this.$nextTick(()=>{this.showModal&&this.$refs.modal&&this.$refs.modal.focus()})},trapFocus(e){let t=e.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'),i=t[0],s=t[t.length-1];e.addEventListener("keydown",a=>{a.key==="Tab"&&(a.shiftKey?document.activeElement===i&&(a.preventDefault(),s.focus()):document.activeElement===s&&(a.preventDefault(),i.focus()))})},preventDefaults(e){e.preventDefault(),e.stopPropagation()},showError(e){this.error=e,this.success=null,setTimeout(()=>{this.error===e&&(this.error=null)},1e4)},showSuccess(e){this.success=e,this.error=null,setTimeout(()=>{this.success===e&&(this.success=null)},5e3)},clearMessages(){this.error=null,this.success=null},generateFileKey(){return Date.now().toString(36)+Math.random().toString(36).substring(2)},parseSize(e){if(typeof e=="number")return e;let t={B:1,BYTES:1,KB:1024,MB:1024*1024,GB:1024*1024*1024,TB:1024*1024*1024*1024},i=String(e).match(/^(\d+(?:\.\d+)?)\s*(\w+)$/i);if(i){let s=parseFloat(i[1]),a=i[2].toUpperCase();return s*(t[a]||1)}return parseInt(e)||0},getCsrfToken(){return document.querySelector('meta[name="csrf-token"]')?.getAttribute("content")||""},buildFileUrl(e){let{disk:t,finalDir:i}=this.config.storage;return t==="public"?`/storage/${i}/${e}`:`/storage/${i}/${e}`},extractFilePathFromUrl(e){if(!e)return"";if(e.includes("/storage/")){let t=e.indexOf("/storage/");return e.substring(t+9)}return e},extractFilenameFromUrl(e){try{return new URL(e).pathname.split("/").pop()||"imported-file"}catch{return"imported-file"}},guessTypeFromUrl(e){let t=e.split(".").pop()?.toLowerCase();return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",mp4:"video/mp4",webm:"video/webm",avi:"video/avi",mp3:"audio/mpeg",wav:"audio/wav",ogg:"audio/ogg",pdf:"application/pdf",doc:"application/msword",zip:"application/zip",rar:"application/x-rar"}[t]||"application/octet-stream"},guessTypeFromFilename(e){let t=e.split(".").pop()?.toLowerCase();return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",mp4:"video/mp4",webm:"video/webm",avi:"video/avi",mp3:"audio/mpeg",wav:"audio/wav",ogg:"audio/ogg",pdf:"application/pdf",doc:"application/msword"}[t]||null},handleKeyboardNavigation(e){(e.key==="Enter"||e.key===" ")&&e.target.classList.contains("dropzone")&&(e.preventDefault(),this.$refs.fileInput?.click()),e.key==="Escape"&&this.showModal&&(e.preventDefault(),this.closeModal())},handleTouchStart(e){this.config.isDisabled||(e.preventDefault(),this.dragActive=!0)},handleTouchMove(e){this.config.isDisabled||e.preventDefault()},handleTouchEnd(e){if(this.config.isDisabled)return;e.preventDefault(),this.dragActive=!1;let t=e.changedTouches[0],i=document.elementFromPoint(t.clientX,t.clientY);i&&i.closest(".dropzone")&&this.$refs.fileInput?.click()},isMobile(){return window.innerWidth<640},isTablet(){return window.innerWidth>=640&&window.innerWidth<1024},announceToScreenReader(e,t="polite"){let i=document.createElement("div");i.setAttribute("aria-live",t),i.setAttribute("aria-atomic","true"),i.className="sr-only",i.textContent=e,document.body.appendChild(i),setTimeout(()=>{document.body.removeChild(i)},1e3)},announceProgress(e,t,i){i==="uploading"&&t%25===0?this.announceToScreenReader(`${e} is ${t}% uploaded`):i==="completed"?this.announceToScreenReader(`${e} upload completed successfully`):i==="error"&&this.announceToScreenReader(`${e} upload failed`,"assertive")},cleanup(){try{this.abortControllers.forEach(e=>{try{e.abort()}catch(t){console.debug("Cleanup abort error (expected):",t)}}),this.abortControllers.clear(),this._fileObjects&&this._fileObjects.clear(),this.showModal&&document.body.classList.remove("overflow-hidden")}catch(e){console.debug("Cleanup error (expected during unload):",e)}}}}export{u as default};
