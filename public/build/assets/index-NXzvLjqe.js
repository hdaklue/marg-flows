import p from"./wavesurfer.esm-Toh_7rjd.js";import{r as s}from"./wavesurfer-manager-AxFnsDT5.js";function m({onSubmit:d=null,instanceKey:h=null,maxDuration:u=30,size:g="sm"}={}){return{isSupported:!1,isInitialized:!1,isRecording:!1,hasRecording:!1,isPlaying:!1,submitCallback:d,instanceKey:h,isUploading:!1,uploadProgress:0,playbackWavesurfer:null,isInitializing:!1,recordedBlob:null,recordedUrl:null,currentDuration:0,maxDuration:u,size:g,timer:null,async init(){this.checkSupport(),this.isSupported&&this.instanceKey&&(await this.createWaveSurfer(),this.$nextTick(()=>{this.setupLivewireListeners()}))},checkSupport(){var e;this.isSupported=!!((e=navigator.mediaDevices)!=null&&e.getUserMedia&&window.MediaRecorder)},async createWaveSurfer(){if(this.isInitializing){console.log("⏳ Already initializing, skipping...");return}try{console.log("🎙️ createWaveSurfer called, instanceKey:",this.instanceKey),this.isInitializing=!0,this.isInitialized=!1;const e=this.$refs.recordingWaveform;if(!e){console.error("Recording waveform container not found"),this.isInitializing=!1;return}if(console.log("📦 Container found, existing children:",e.children.length),this.instanceKey){if(console.log("🗑️ Destroying existing recorder instance..."),s.destroy(this.instanceKey),await new Promise(r=>setTimeout(r,50)),e.children.length>0)for(console.log("🧹 Manually clearing remaining DOM elements...");e.firstChild;)e.removeChild(e.firstChild);console.log("✨ Container after cleanup, children:",e.children.length)}const i=document.documentElement.classList.contains("dark"),t={height:(r=>{switch(r){case"sm":return 24;case"lg":return 40;case"md":default:return 32}})(this.size),waveColor:i?"#71717a":"#d4d4d8",progressColor:"#10b981",cursorColor:i?"#059669":"#047857",barWidth:2,barGap:1,responsive:!0,normalize:!0,hideScrollbar:!0,interact:!1,maxDuration:this.maxDuration};console.log("🔧 Initializing recorder with manager..."),await s.init(this.instanceKey,e,null,null,t),console.log("🎧 Setting up event listeners...");const a=s.getRecord(this.instanceKey);a?(a.unAll(),a.on("record-start",()=>{this.isRecording=!0,this.startTimer(),console.log("📹 Recording started - isRecording:",this.isRecording),setTimeout(()=>{const r=this.$refs.recordingWaveform;if(r){const n=r.getBoundingClientRect();console.log("📐 Container visibility - width:",n.width,"height:",n.height,"visible:",n.width>0&&n.height>0),console.log("🎨 Container computed display:",window.getComputedStyle(r).display),console.log("👁️ Container parent visibility:",window.getComputedStyle(r.parentElement).display);const c=s.getWavesurfer(this.instanceKey);if(c&&n.width>0&&n.height>0){console.log("🔄 Forcing WaveSurfer redraw...");try{c.drawer.fireEvent("redraw")}catch(f){console.log("⚠️ Could not force redraw:",f.message)}}}},100)}),a.on("record-end",r=>{this.isRecording=!1,this.stopTimer(),r&&r.size>0?(this.recordedBlob=r,this.recordedUrl=URL.createObjectURL(r),this.hasRecording=!0,console.log("Recording ended successfully, blob size:",r.size),this.createPlaybackWaveSurfer()):(console.error("Recording ended with empty or invalid blob"),this.showError("Recording failed - no audio data captured"))}),a.on("record-progress",r=>{this.currentDuration=Math.floor(r/1e3),console.log("📊 Record progress:",r,"ms, duration:",this.currentDuration,"s"),this.currentDuration>=this.maxDuration&&this.stopRecording()}),a.on("record-error",r=>{console.error("Recording error:",r),this.isRecording=!1,this.stopTimer(),this.showError("Recording failed: "+r.message)}),this.isInitialized=!0,console.log("✅ WaveSurfer recording initialized successfully")):(console.error("Failed to get record plugin from manager"),this.showError("Failed to initialize recording plugin"));const l=s.getWavesurfer(this.instanceKey);l&&(l.unAll(),l.on("error",r=>{console.error("WaveSurfer error:",r),this.showError("Audio system error: "+r.message)}))}catch(e){console.error("Failed to create WaveSurfer instance:",e),this.showError("Failed to initialize audio recorder"),this.isInitialized=!1}finally{this.isInitializing=!1}},async createPlaybackWaveSurfer(){if(!(!this.recordedUrl||!this.instanceKey))try{const e=this.$refs.playbackWaveform;if(!e){console.error("Playback waveform container not found");return}if(this.playbackWavesurfer){try{this.playbackWavesurfer.destroy()}catch(t){console.warn("Error destroying previous playback wavesurfer:",t)}this.playbackWavesurfer=null}const i=document.documentElement.classList.contains("dark"),o=t=>{switch(t){case"sm":return 24;case"lg":return 40;case"md":default:return 32}};this.playbackWavesurfer=p.create({container:e,height:o(this.size),waveColor:i?"#71717a":"#d4d4d8",progressColor:"#0ea5e9",cursorColor:i?"#0284c7":"#0369a1",barWidth:2,barGap:1,responsive:!0,normalize:!0,hideScrollbar:!0}),this.playbackWavesurfer.on("play",()=>{this.isPlaying=!0}),this.playbackWavesurfer.on("pause",()=>{this.isPlaying=!1}),this.playbackWavesurfer.on("finish",()=>{this.isPlaying=!1}),this.playbackWavesurfer.on("error",t=>{console.error("Playback error:",t),this.showError("Playback error: "+t.message)}),await this.playbackWavesurfer.load(this.recordedUrl)}catch(e){console.error("Failed to create playback WaveSurfer:",e),this.showError("Failed to create audio preview")}},async startRecording(){if(console.log("🔴 startRecording called - Fresh initialization approach"),!(!this.isSupported||this.isRecording||!this.instanceKey))try{if(console.log("🔄 Creating fresh WaveSurfer instance for recording..."),await this.createWaveSurfer(),!this.isInitialized){this.showError("Failed to initialize recorder");return}const e=s.getRecord(this.instanceKey);e?(console.log("🎬 Starting recording with fresh plugin..."),await e.startRecording()):this.showError("Recording plugin not found")}catch(e){console.error("Failed to start recording:",e),this.showError("Failed to start recording. Please check microphone permissions.")}},stopRecording(){if(!this.isRecording||!this.instanceKey)return;const e=s.getRecord(this.instanceKey);e&&e.stopRecording()},async togglePlayback(){this.hasRecording&&(this.playbackWavesurfer||await this.createPlaybackWaveSurfer(),this.playbackWavesurfer&&this.playbackWavesurfer.playPause())},deleteRecording(){if(this.isPlaying&&this.playbackWavesurfer)try{this.playbackWavesurfer.pause()}catch(e){console.warn("Error pausing playback during delete:",e)}if(this.playbackWavesurfer){try{this.playbackWavesurfer.destroy()}catch(e){console.warn("Error destroying playback wavesurfer:",e)}this.playbackWavesurfer=null}this.recordedUrl&&(URL.revokeObjectURL(this.recordedUrl),this.recordedUrl=null),this.recordedBlob=null,this.hasRecording=!1,this.isPlaying=!1,this.currentDuration=0,this.isUploading=!1,this.uploadProgress=0},async submitRecording(){if(!(!this.recordedBlob||this.isUploading)){this.isUploading=!0,this.uploadProgress=0;try{if(typeof this.submitCallback=="function"){const e=new File([this.recordedBlob],"voice-note.webm",{type:this.recordedBlob.type||"audio/webm"});this.$wire.upload("audio",e,i=>{console.log("✅ Upload completed:",i),this.uploadProgress=100,this.$wire.finalizeNoteUpload(i)},i=>{console.error("❌ Upload error:",i),reject(new Error(i))},i=>{this.uploadProgress=Math.round(i.detail.progress),console.log("📈 Upload progress:",this.uploadProgress+"%")},()=>{console.log("⚠️ Upload cancelled"),reject(new Error("Upload cancelled"))}),setTimeout(()=>{this.resetAfterUpload()},500)}else console.warn("No submit callback provided"),this.resetAfterUpload()}catch(e){console.error("Submit error:",e),this.isUploading=!1,this.uploadProgress=0,this.showError("Failed to submit recording: "+e.message)}}},resetAfterUpload(){console.log("🧹 Resetting recorder after successful upload..."),this.isUploading=!1,this.uploadProgress=0,this.deleteRecording(),this.instanceKey&&(console.log("💥 Destroying recorder instance completely..."),s.destroy(this.instanceKey),this.isInitialized=!1),console.log("✅ Reset complete - ready for fresh recording")},resetWaveSurfer(){this.isRecording=!1,this.currentDuration=0,this.stopTimer()},startTimer(){this.currentDuration=0,this.timer=setInterval(()=>{this.currentDuration++,this.currentDuration>=this.maxDuration&&this.stopRecording()},1e3)},stopTimer(){this.timer&&(clearInterval(this.timer),this.timer=null)},formatTime(e){if(!isFinite(e)||e<0)return"0:00";const i=Math.floor(e/60),o=Math.floor(e%60).toString().padStart(2,"0");return`${i}:${o}`},showError(e){console.error("Voice Recorder:",e),window.dispatchEvent(new CustomEvent("voice-recorder:error",{detail:{message:e}}))},setupLivewireListeners(){if(this.$refs.recordingWaveform&&this.$refs.recordingWaveform.closest("[wire\\:id]")){const e=this.$refs.recordingWaveform.closest("[wire\\:id]");this._livewireListenersAdded||(this._uploadFinishHandler=()=>{console.log("Livewire upload finished, resetting recorder"),this.isUploading&&(this.isUploading=!1,this.uploadProgress=0)},this._uploadErrorHandler=i=>{var o;console.error("Livewire upload error:",i.detail),this.isUploading=!1,this.uploadProgress=0,this.showError("Upload failed: "+(((o=i.detail)==null?void 0:o.message)||"Unknown error"))},this._voiceNoteCanceledHandler=()=>{console.log("Voice note canceled, resetting recorder completely"),this.isRecording&&this.stopRecording(),this.deleteRecording(),this.resetWaveSurfer(),this.isUploading=!1,this.uploadProgress=0},e.addEventListener("livewire-upload-finish",this._uploadFinishHandler),e.addEventListener("livewire-upload-error",this._uploadErrorHandler),window.addEventListener("voice-note:canceled",this._voiceNoteCanceledHandler),this._livewireListenersAdded=!0)}},destroy(){if(console.log("Destroying voice recorder..."),this._livewireListenersAdded&&this.$refs.recordingWaveform){const e=this.$refs.recordingWaveform.closest("[wire\\:id]");e&&(e.removeEventListener("livewire-upload-finish",this._uploadFinishHandler),e.removeEventListener("livewire-upload-error",this._uploadErrorHandler)),window.removeEventListener("voice-note:canceled",this._voiceNoteCanceledHandler),this._livewireListenersAdded=!1}if(this.stopTimer(),this.isRecording&&this.instanceKey)try{const e=s.getRecord(this.instanceKey);e&&e.stopRecording()}catch(e){console.warn("Error stopping recording during destroy:",e)}if(this.instanceKey&&s.destroy(this.instanceKey),this.isInitialized=!1,this.playbackWavesurfer){try{this.playbackWavesurfer.destroy()}catch(e){console.warn("Error destroying playback wavesurfer during component destroy:",e)}this.playbackWavesurfer=null}this.recordedUrl&&(URL.revokeObjectURL(this.recordedUrl),this.recordedUrl=null),this.recordedBlob=null,this.isRecording=!1,this.hasRecording=!1,this.isPlaying=!1,this.isUploading=!1,this.currentDuration=0,this.uploadProgress=0}}}export{m as default};
